<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.smart.mapper.SmtUnitMapper">
    
    <resultMap type="SmtUnit" id="SmtUnitResult">
        <result property="unitId"    column="unit_id"    />
        <result property="buildId"    column="build_id"    />
        <result property="unitName"    column="unit_name"    />
        <result property="orderNum"    column="order_num"    />
        <result property="status"    column="status"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="remark"    column="remark"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <!-- 嵌套映射 Building -->
        <association property="build" javaType="SmtBuild">
            <result property="buildId" column="build_id"/>
            <result property="buildName"    column="build_name"    />
            <result property="buildType"    column="build_type"    />
           <!-- <result property="orderNum"    column="order_num"    />
            <result property="status"    column="status"    />
            <result property="remark"    column="remark"    />-->
        </association>
    </resultMap>

    <sql id="selectSmtUnitVo">
        select unit_id, build_id, unit_name, order_num, status, del_flag, remark, create_by, create_time, update_by, update_time from smt_unit
    </sql>

    <select id="selectSmtUnitList" parameterType="SmtUnit" resultMap="SmtUnitResult">
        <!--<include refid="selectSmtUnitVo"/>-->
        select
            su.unit_id,
            su.unit_name,
            su.order_num,
            su.status,
            su.del_flag,
            su.remark,
            su.create_by,
            su.create_time,
            su.update_by,
            su.update_time,
            sb.build_id,
            sb.build_name,
            sb.build_type
        from smt_unit su
        LEFT JOIN smt_build sb on sb.build_id = su.build_id
        <where>  
            <if test="buildId != null "> and su.build_id = #{buildId}</if>
            <if test="unitName != null  and unitName != ''"> and su.unit_name like concat('%', #{unitName}, '%')</if>
            <if test="orderNum != null "> and su.order_num = #{orderNum}</if>
            <if test="status != null  and status != ''"> and su.status = #{status}</if>
        </where>
    </select>
    
    <select id="selectSmtUnitByUnitId" parameterType="Long" resultMap="SmtUnitResult">
        <include refid="selectSmtUnitVo"/>
        where unit_id = #{unitId}
    </select>

    <insert id="insertSmtUnit" parameterType="SmtUnit" useGeneratedKeys="true" keyProperty="unitId">
        insert into smt_unit
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="buildId != null">build_id,</if>
            <if test="unitName != null">unit_name,</if>
            <if test="orderNum != null">order_num,</if>
            <if test="status != null">status,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="remark != null">remark,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="buildId != null">#{buildId},</if>
            <if test="unitName != null">#{unitName},</if>
            <if test="orderNum != null">#{orderNum},</if>
            <if test="status != null">#{status},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateSmtUnit" parameterType="SmtUnit">
        update smt_unit
        <trim prefix="SET" suffixOverrides=",">
            <if test="buildId != null">build_id = #{buildId},</if>
            <if test="unitName != null">unit_name = #{unitName},</if>
            <if test="orderNum != null">order_num = #{orderNum},</if>
            <if test="status != null">status = #{status},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where unit_id = #{unitId}
    </update>

    <delete id="deleteSmtUnitByUnitId" parameterType="Long">
        delete from smt_unit where unit_id = #{unitId}
    </delete>

    <delete id="deleteSmtUnitByUnitIds" parameterType="String">
        delete from smt_unit where unit_id in 
        <foreach item="unitId" collection="array" open="(" separator="," close=")">
            #{unitId}
        </foreach>
    </delete>
</mapper>