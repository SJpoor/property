<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.smart.mapper.SmtBuildMapper">
    
    <resultMap type="SmtBuild" id="SmtBuildResult">
        <result property="buildId"    column="build_id"    />
        <result property="buildName"    column="build_name"    />
        <result property="buildType"    column="build_type"    />
        <result property="orderNum"    column="order_num"    />
        <result property="status"    column="status"    />
        <result property="remark"    column="remark"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectSmtBuildVo">
        select build_id, build_name, build_type, order_num, status, remark, del_flag, create_by, create_time, update_by, update_time from smt_build
    </sql>

    <select id="selectSmtBuildList" parameterType="SmtBuild" resultMap="SmtBuildResult">
        <include refid="selectSmtBuildVo"/>
        <where>  
            <if test="buildName != null  and buildName != ''"> and build_name like concat('%', #{buildName}, '%')</if>
            <if test="buildType != null  and buildType != ''"> and build_type = #{buildType}</if>
            <if test="orderNum != null "> and order_num = #{orderNum}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectSmtBuildByBuildId" parameterType="Long" resultMap="SmtBuildResult">
        <include refid="selectSmtBuildVo"/>
        where build_id = #{buildId}
    </select>

    <insert id="insertSmtBuild" parameterType="SmtBuild" useGeneratedKeys="true" keyProperty="buildId">
        insert into smt_build
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="buildName != null">build_name,</if>
            <if test="buildType != null">build_type,</if>
            <if test="orderNum != null">order_num,</if>
            <if test="status != null">status,</if>
            <if test="remark != null">remark,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="buildName != null">#{buildName},</if>
            <if test="buildType != null">#{buildType},</if>
            <if test="orderNum != null">#{orderNum},</if>
            <if test="status != null">#{status},</if>
            <if test="remark != null">#{remark},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateSmtBuild" parameterType="SmtBuild">
        update smt_build
        <trim prefix="SET" suffixOverrides=",">
            <if test="buildName != null">build_name = #{buildName},</if>
            <if test="buildType != null">build_type = #{buildType},</if>
            <if test="orderNum != null">order_num = #{orderNum},</if>
            <if test="status != null">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where build_id = #{buildId}
    </update>

    <delete id="deleteSmtBuildByBuildId" parameterType="Long">
        delete from smt_build where build_id = #{buildId}
    </delete>

    <delete id="deleteSmtBuildByBuildIds" parameterType="String">
        delete from smt_build where build_id in 
        <foreach item="buildId" collection="array" open="(" separator="," close=")">
            #{buildId}
        </foreach>
    </delete>
</mapper>